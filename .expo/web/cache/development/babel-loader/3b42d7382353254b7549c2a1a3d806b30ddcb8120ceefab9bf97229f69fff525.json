{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegistrationForm(_ref) {\n  var _ref$data = _ref.data,\n    login = _ref$data.login,\n    email = _ref$data.email,\n    password = _ref$data.password,\n    changeData = _ref.changeData;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    visiblePassword = _useState2[0],\n    useVisiblePassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    focused = _useState4[0],\n    setFocused = _useState4[1];\n  return _jsxs(View, {\n    style: styles.inputWrapper,\n    children: [_jsx(TextInput, {\n      style: focused === \"login\" && login ? _objectSpread(_objectSpread({}, styles.input), styles.focusedInput) : _objectSpread({}, styles.input),\n      name: \"login\",\n      textContentType: \"nickname\",\n      placeholder: \"\\u041B\\u043E\\u0433\\u0456\\u043D\",\n      placeholderTextColor: \"#BDBDBD\",\n      value: login,\n      onChangeText: function onChangeText(value) {\n        return changeData(\"login\", value);\n      },\n      onFocus: function onFocus() {\n        return setFocused(\"login\");\n      }\n    }), _jsx(TextInput, {\n      style: focused === \"email\" && email ? _objectSpread(_objectSpread({}, styles.input), styles.focusedInput) : _objectSpread({}, styles.input),\n      name: \"email\",\n      inputMode: \"email\",\n      textContentType: \"emailAddress\",\n      placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0430 \\u0435\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0457 \\u043F\\u043E\\u0448\\u0442\\u0438\",\n      placeholderTextColor: \"#BDBDBD\",\n      value: email,\n      onChangeText: function onChangeText(value) {\n        return changeData(\"email\", value);\n      },\n      onFocus: function onFocus() {\n        return setFocused(\"email\");\n      }\n    }), _jsxs(View, {\n      style: styles.passwordWrapper,\n      children: [_jsx(TextInput, {\n        style: focused === \"password\" && password ? _objectSpread(_objectSpread({}, styles.input), styles.focusedInput) : _objectSpread({}, styles.input),\n        name: \"password\",\n        textContentType: \"password\",\n        secureTextEntry: visiblePassword,\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        placeholderTextColor: \"#BDBDBD\",\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return changeData(\"password\", value);\n        },\n        onFocus: function onFocus() {\n          return setFocused(\"password\");\n        }\n      }), password && _jsx(Pressable, {\n        style: styles.switch,\n        onPress: function onPress() {\n          return useVisiblePassword(!visiblePassword);\n        },\n        children: _jsx(Text, {\n          children: visiblePassword ? \"Показати\" : \"Сховати\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  inputWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 16,\n    marginBottom: 43\n  },\n  input: {\n    height: 50,\n    padding: 15,\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 8,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#E8E8E8\",\n    fontFamily: \"Roboto\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\"\n  },\n  focusedInput: {\n    borderColor: \"#FF6C00\",\n    backgroundColor: \"#FFFFFF\"\n  },\n  passwordWrapper: {\n    position: \"relative\"\n  },\n  switch: {\n    position: \"absolute\",\n    right: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"names":["useState","Pressable","StyleSheet","Text","TextInput","View","jsx","_jsx","jsxs","_jsxs","RegistrationForm","_ref","_ref$data","data","login","email","password","changeData","_useState","_useState2","_slicedToArray","visiblePassword","useVisiblePassword","_useState3","_useState4","focused","setFocused","style","styles","inputWrapper","children","_objectSpread","input","focusedInput","name","textContentType","placeholder","placeholderTextColor","value","onChangeText","onFocus","inputMode","passwordWrapper","secureTextEntry","switch","onPress","create","display","flexDirection","gap","marginBottom","height","padding","backgroundColor","borderRadius","borderWidth","borderStyle","borderColor","fontFamily","fontWeight","fontSize","lineHeight","color","position","right","justifyContent","alignItems"],"sources":["/Users/andrijgadar/Documents/GitHub/react-native-profile-project/src/components/RegistrationForm/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Pressable, StyleSheet, Text, TextInput, View } from \"react-native\";\n\nexport default function RegistrationForm({\n  data: { login, email, password },\n  changeData,\n}) {\n  const [visiblePassword, useVisiblePassword] = useState(true);\n  const [focused, setFocused] = useState(\"\");\n\n  return (\n    <View style={styles.inputWrapper}>\n      <TextInput\n        style={\n          focused === \"login\" && login\n            ? { ...styles.input, ...styles.focusedInput }\n            : { ...styles.input }\n        }\n        name=\"login\"\n        textContentType=\"nickname\"\n        placeholder=\"Логін\"\n        placeholderTextColor=\"#BDBDBD\"\n        value={login}\n        onChangeText={(value) => changeData(\"login\", value)}\n        onFocus={() => setFocused(\"login\")}\n      ></TextInput>\n\n      <TextInput\n        style={\n          focused === \"email\" && email\n            ? { ...styles.input, ...styles.focusedInput }\n            : { ...styles.input }\n        }\n        name=\"email\"\n        inputMode=\"email\"\n        textContentType=\"emailAddress\"\n        placeholder=\"Адреса електронної пошти\"\n        placeholderTextColor=\"#BDBDBD\"\n        value={email}\n        onChangeText={(value) => changeData(\"email\", value)}\n        onFocus={() => setFocused(\"email\")}\n      ></TextInput>\n\n      <View style={styles.passwordWrapper}>\n        <TextInput\n          style={\n            focused === \"password\" && password\n              ? { ...styles.input, ...styles.focusedInput }\n              : { ...styles.input }\n          }\n          name=\"password\"\n          textContentType=\"password\"\n          secureTextEntry={visiblePassword}\n          placeholder=\"Пароль\"\n          placeholderTextColor=\"#BDBDBD\"\n          value={password}\n          onChangeText={(value) => changeData(\"password\", value)}\n          onFocus={() => setFocused(\"password\")}\n        ></TextInput>\n\n        {password && (\n          <Pressable\n            style={styles.switch}\n            onPress={() => useVisiblePassword(!visiblePassword)}\n          >\n            <Text>{visiblePassword ? \"Показати\" : \"Сховати\"}</Text>\n          </Pressable>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 16,\n    marginBottom: 43,\n  },\n\n  input: {\n    height: 50,\n    padding: 15,\n\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 8,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#E8E8E8\",\n\n    fontFamily: \"Roboto\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n  },\n\n  focusedInput: {\n    borderColor: \"#FF6C00\",\n    backgroundColor: \"#FFFFFF\",\n  },\n\n  passwordWrapper: {\n    position: \"relative\",\n  },\n\n  switch: {\n    position: \"absolute\",\n    right: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}