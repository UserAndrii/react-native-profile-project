{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useFonts } from \"expo-font\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RegistrationScreen from \"./src/screens/RegistrationScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport PostsScreen from \"./src/screens/PostsScreen\";\nimport bgImage from \"./src/images/bg-mobile-photo.jpg\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(!true),\n    _useState2 = _slicedToArray(_useState, 2),\n    screens = _useState2[0],\n    useScreens = _useState2[1];\n  var _useFonts = useFonts({\n      Roboto: require(\"./src/fonts/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(_Fragment, {\n    children: _jsxs(ImageBackground, {\n      source: bgImage,\n      style: styles.backgroundImage,\n      children: [screens ? _jsx(RegistrationScreen, {}) : _jsx(LoginScreen, {}), _jsx(View, {\n        style: styles.placeholder\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    position: \"relative\",\n    flex: 1\n  },\n  placeholder: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    backgroundColor: \"#FFFFFF\",\n    height: 400,\n    width: \"100%\"\n  }\n});","map":{"version":3,"names":["useFonts","ImageBackground","KeyboardAvoidingView","StyleSheet","View","RegistrationScreen","LoginScreen","PostsScreen","bgImage","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_useState","_useState2","_slicedToArray","screens","useScreens","_useFonts","Roboto","require","_useFonts2","fontsLoaded","children","source","style","styles","backgroundImage","placeholder","create","position","flex","bottom","left","backgroundColor","height","width"],"sources":["/Users/andrijgadar/Documents/GitHub/react-native-profile-project/App.js"],"sourcesContent":["import { useFonts } from \"expo-font\";\nimport {\n  ImageBackground,\n  KeyboardAvoidingView,\n  StyleSheet,\n  View,\n} from \"react-native\";\n\nimport RegistrationScreen from \"./src/screens/RegistrationScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport PostsScreen from \"./src/screens/PostsScreen\";\nimport bgImage from \"./src/images/bg-mobile-photo.jpg\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  const [screens, useScreens] = useState(!true);\n\n  const [fontsLoaded] = useFonts({\n    Roboto: require(\"./src/fonts/Roboto-Regular.ttf\"),\n  });\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <ImageBackground source={bgImage} style={styles.backgroundImage}>\n        {/* <PostsScreen /> */}\n\n        {screens ? <RegistrationScreen /> : <LoginScreen />}\n        <View style={styles.placeholder}></View>\n      </ImageBackground>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    position: \"relative\",\n    flex: 1,\n  },\n\n  placeholder: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    backgroundColor: \"#FFFFFF\",\n    height: 400,\n    width: \"100%\",\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,WAAW;AAAC,OAAAC,eAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAQrC,OAAOC,kBAAkB;AACzB,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAClB,OAAOC,OAAO;AACd,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA8BR,QAAQ,CAAC,CAAC,IAAI,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAAI,SAAA,GAAsBtB,QAAQ,CAAC;MAC7BuB,MAAM,EAAEC,OAAO,iCAAiC;IAClD,CAAC,CAAC;IAAAC,UAAA,GAAAN,cAAA,CAAAG,SAAA;IAFKI,WAAW,GAAAD,UAAA;EAIlB,IAAI,CAACC,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEf,IAAA,CAAAI,SAAA;IAAAY,QAAA,EACEd,KAAA,CAACZ,eAAe;MAAC2B,MAAM,EAAEpB,OAAQ;MAACqB,KAAK,EAAEC,MAAM,CAACC,eAAgB;MAAAJ,QAAA,GAG7DP,OAAO,GAAGT,IAAA,CAACN,kBAAkB,IAAE,CAAC,GAAGM,IAAA,CAACL,WAAW,IAAE,CAAC,EACnDK,IAAA,CAACP,IAAI;QAACyB,KAAK,EAAEC,MAAM,CAACE;MAAY,CAAO,CAAC;IAAA,CACzB;EAAC,CAClB,CAAC;AAEP;AAEA,IAAMF,MAAM,GAAG3B,UAAU,CAAC8B,MAAM,CAAC;EAC/BF,eAAe,EAAE;IACfG,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE;EACR,CAAC;EAEDH,WAAW,EAAE;IACXE,QAAQ,EAAE,UAAU;IACpBE,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}