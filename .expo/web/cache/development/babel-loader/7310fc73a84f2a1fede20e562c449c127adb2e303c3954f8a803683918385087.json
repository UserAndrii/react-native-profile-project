{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-gesture-handler';\nimport Toast from 'react-native-toast-message';\nimport { useFonts } from 'expo-font';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegistrationScreen from \"./src/screens/RegistrationScreen\";\nimport CommentsScreen from \"./src/screens/CommentsScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport Home from \"./src/screens/Home\";\nimport Header from \"./src/components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MainStack = createStackNavigator();\nexport default function App() {\n  var _useFonts = useFonts({\n      Roboto: require(\"./src/fonts/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(NavigationContainer, {\n      children: _jsxs(MainStack.Navigator, {\n        initialRouteName: \"Registration\",\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(MainStack.Screen, {\n          name: \"Registration\",\n          component: RegistrationScreen\n        }), _jsx(MainStack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(MainStack.Screen, {\n          name: \"Home\",\n          component: Home\n        }), _jsx(MainStack.Screen, {\n          name: \"Comments\",\n          component: CommentsScreen,\n          options: {\n            header: function header() {\n              return _jsx(Header, {\n                title: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456\"\n              });\n            },\n            headerShown: 'true'\n          }\n        })]\n      })\n    }), _jsx(Toast, {\n      topOffset: 60\n    })]\n  });\n}","map":{"version":3,"names":["Toast","useFonts","NavigationContainer","createStackNavigator","RegistrationScreen","CommentsScreen","LoginScreen","Home","Header","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MainStack","App","_useFonts","Roboto","require","_useFonts2","_slicedToArray","fontsLoaded","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component","options","header","title","topOffset"],"sources":["/Users/andrijgadar/Documents/GitHub/react-native-profile-project/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport Toast from 'react-native-toast-message';\nimport { useFonts } from 'expo-font';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport RegistrationScreen from './src/screens/RegistrationScreen';\nimport CommentsScreen from './src/screens/CommentsScreen';\nimport LoginScreen from './src/screens/LoginScreen';\nimport Home from './src/screens/Home';\nimport Header from './src/components/Header';\n\nconst MainStack = createStackNavigator();\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    Roboto: require('./src/fonts/Roboto-Regular.ttf'),\n  });\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <NavigationContainer>\n        <MainStack.Navigator\n          initialRouteName=\"Registration\"\n          screenOptions={{ headerShown: false }}\n        >\n          <MainStack.Screen\n            name=\"Registration\"\n            component={RegistrationScreen}\n          />\n          <MainStack.Screen name=\"Login\" component={LoginScreen} />\n          <MainStack.Screen name=\"Home\" component={Home} />\n          <MainStack.Screen\n            name=\"Comments\"\n            component={CommentsScreen}\n            options={{\n              header: () => <Header title=\"Коментарі\" />,\n              headerShown: 'true',\n            }}\n          />\n        </MainStack.Navigator>\n      </NavigationContainer>\n      <Toast topOffset={60} />\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAO,8BAA8B;AACrC,OAAOA,KAAK,MAAM,4BAA4B;AAC9C,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,OAAOC,kBAAkB;AACzB,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,OAAOC,IAAI;AACX,OAAOC,MAAM;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,IAAMC,SAAS,GAAGZ,oBAAoB,CAAC,CAAC;AAExC,eAAe,SAASa,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBhB,QAAQ,CAAC;MAC7BiB,MAAM,EAAEC,OAAO,iCAAiC;IAClD,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAFKK,WAAW,GAAAF,UAAA;EAIlB,IAAI,CAACE,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEV,KAAA,CAAAE,SAAA;IAAAS,QAAA,GACEb,IAAA,CAACR,mBAAmB;MAAAqB,QAAA,EAClBX,KAAA,CAACG,SAAS,CAACS,SAAS;QAClBC,gBAAgB,EAAC,cAAc;QAC/BC,aAAa,EAAE;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAJ,QAAA,GAEtCb,IAAA,CAACK,SAAS,CAACa,MAAM;UACfC,IAAI,EAAC,cAAc;UACnBC,SAAS,EAAE1B;QAAmB,CAC/B,CAAC,EACFM,IAAA,CAACK,SAAS,CAACa,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAExB;QAAY,CAAE,CAAC,EACzDI,IAAA,CAACK,SAAS,CAACa,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEvB;QAAK,CAAE,CAAC,EACjDG,IAAA,CAACK,SAAS,CAACa,MAAM;UACfC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAEzB,cAAe;UAC1B0B,OAAO,EAAE;YACPC,MAAM,EAAE,SAAAA,OAAA;cAAA,OAAMtB,IAAA,CAACF,MAAM;gBAACyB,KAAK,EAAC;cAAW,CAAE,CAAC;YAAA;YAC1CN,WAAW,EAAE;UACf;QAAE,CACH,CAAC;MAAA,CACiB;IAAC,CACH,CAAC,EACtBjB,IAAA,CAACV,KAAK;MAACkC,SAAS,EAAE;IAAG,CAAE,CAAC;EAAA,CACxB,CAAC;AAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}